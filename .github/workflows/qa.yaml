on:
  push:
    branches:
      - main

name: Deploy QA

jobs:
  build:
    name: build image
    runs-on: [self-hosted, qa]
    environment: qa

    env:
      AWS_REGION: us-east-1
      EKS_CLUSTER_NAME: qa-eks
      AWS_ACCESS_KEY_ID: ${{ secrets.EKS_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.EKS_AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1

      - name: Setup Kube-config
        id: setup-kubeconfig
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: caterpie
          IMAGE_TAG: ${{ github.sha }}
          ENVIRONMENT: qa
          NODE_ENV: qa
        run: |
          make
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:lakers.scanner.api-$IMAGE_TAG"

  deploy:
    name: Deploy Images
    runs-on: [self-hosted, qa]
    environment: qa
    needs: [build]

    env:
      AWS_REGION: us-east-1
      EKS_CLUSTER_NAME: qa-eks
      AWS_ACCESS_KEY_ID: ${{ secrets.EKS_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.EKS_AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.EKS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.EKS_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy
        id: deploy-k8s
        env:
          IMAGE_URL: ${{ steps.build-image.outputs.image }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: caterpie
          IMAGE_TAG: ${{ github.sha }}
          ENVIRONMENT: qa-us-east-1
        run: |
          echo $AWS_ACCESS_KEY_ID
          echo $AWS_SECRET_ACCESS_KEY
          aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME
          echo $IMAGE_URL
          echo $ECR_REGISTRY
          cd ./deployments/caterpie && make upgrade && cd -
